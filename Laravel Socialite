laravel install
open .env file that config database
auth authentication/auth laravel/ui package
lets go database/migration/users/table
open users table
add field 
$table->string('provider_id')->nullable();
$table->string('avatar')->nullable();
run command (php artisan migrate)
composer require laravel/socialite
lets open config/services.php
                  'github' => [
                      'client_id' => env('GITHUB_CLIENT_ID'),
                      'client_secret' => env('GITHUB_CLIENT_SECRET'),
                      'redirect' => 'http://your-callback-url',
                  ],
 open .env file and add 
           GITHUB_CLIENT_ID
           GITHUB_CLIENT_SECRET
           Google_CLIENT_ID
           Google_CLIENT_SECRET
 open login.blade.php and add login button
 
                        <div class="form-group row">
                            <div class="col-md-6 offset-md-3">
                                <a href="{{ route('login.google') }}" class="btn btn-danger btn-block">LogIn With Google</a>
                                <a href="{{ route('login.facebook') }}" class="btn btn-primary btn-block">LogIn With Facebook</a>
                                <a href="{{ route('login.github') }}" class="btn btn-dark btn-block">LogIn With Github</a>
                            </div>
                        </div>
 
open web.php
          Route::get('login/google', 'Auth\LoginController@redirectToGoogle')->name('login.google');
          Route::get('login/google/callback', 'Auth\LoginController@handleGoogleCallback');

          Route::get('login/facebook', 'Auth\LoginController@redirectToFacebook')->name('login.facebook');
          Route::get('login/facebook/callback', 'Auth\LoginController@handleFacebookCallback');

          Route::get('login/github', 'Auth\LoginController@redirectToGithub')->name('login.github');
          Route::get('login/github/callback', 'Auth\LoginController@handleGithubCallback');

open app/http/controller/auth/logincontroller.php

                //google login
                  public function redirectToGoogle()
                  {
                      return Socialite::driver('google')->redirect();
                  }
               // google callback
                  public function handleGoogleCallback()
                  {
                      $user = Socialite::driver('google')->user();

                      $this->_registerOrLoginUser($user);
                      //return home after login
                      return redirect()->route('home');
                  }

                  //facebook login
                  public function redirectToFacebook()
                  {
                      return Socialite::driver('facebook')->redirect();
                  }
                  // facebook callback
                  public function handleFacebookCallback()
                  {
                      $user = Socialite::driver('facebook')->user();

                      $this->_registerOrLoginUser($user);
                      //return home after login
                      return redirect()->route('home');
                  }

                  //github login
                  public function redirectToGithub()
                  {
                      return Socialite::driver('github')->redirect();
                  }
                  // github callback
                  public function handleGithubCallback()
                  {
                      $user = Socialite::driver('github')->user();

                      $this->_registerOrLoginUser($user);
                      //return home after login
                      return redirect()->route('home');
                  }
and create method _registerOrLoginUser

protected function _registerOrLoginUser($data)
        {
            $user = User::where('email','=',$data->email)->first();
            if(!$user)
            {
                $user = new User();
                $user->name = $data->name;
                $user->email = $data->email;
                $user->provider_id = $data->id;
                $user->avatar = $data->avatar;
                $user->save();
            }
            Auth::login($user);
        }
        
        
